<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="fip1.jpa1.ExoJPATest" tests="11" skipped="0" failures="0" errors="0" timestamp="2020-03-30T18:19:59" hostname="LAPTOP-Q8IO1BSP" time="1.221">
  <properties/>
  <testcase name="testCreerEmprunteur()" classname="fip1.jpa1.ExoJPATest" time="0.679"/>
  <testcase name="testChercherNomPrenom()" classname="fip1.jpa1.ExoJPATest" time="0.087"/>
  <testcase name="testCreerAuteur()" classname="fip1.jpa1.ExoJPATest" time="0.048"/>
  <testcase name="testDatesIntervalle()" classname="fip1.jpa1.ExoJPATest" time="0.115"/>
  <testcase name="testEmprunter()" classname="fip1.jpa1.ExoJPATest" time="0.074"/>
  <testcase name="testCreerLivreEtAuteurs()" classname="fip1.jpa1.ExoJPATest" time="0.038"/>
  <testcase name="testCreerAuteurs()" classname="fip1.jpa1.ExoJPATest" time="0.032"/>
  <testcase name="testDatesPublication()" classname="fip1.jpa1.ExoJPATest" time="0.031"/>
  <testcase name="testCreerLivre()" classname="fip1.jpa1.ExoJPATest" time="0.018"/>
  <testcase name="testTrouverLivresDunAuteur()" classname="fip1.jpa1.ExoJPATest" time="0.055"/>
  <testcase name="testPostCreationAuteur()" classname="fip1.jpa1.ExoJPATest" time="0.019"/>
  <system-out><![CDATA[20:19:52.864 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
20:19:52.884 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
20:19:52.940 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [fip1.jpa1.ExoJPATest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
20:19:52.974 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [fip1.jpa1.ExoJPATest], using SpringBootContextLoader
20:19:52.984 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [fip1.jpa1.ExoJPATest]: class path resource [fip1/jpa1/ExoJPATest-context.xml] does not exist
20:19:52.985 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [fip1.jpa1.ExoJPATest]: class path resource [fip1/jpa1/ExoJPATestContext.groovy] does not exist
20:19:52.986 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [fip1.jpa1.ExoJPATest]: no resource found for suffixes {-context.xml, Context.groovy}.
20:19:53.079 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [fip1.jpa1.ExoJPATest]
20:19:53.303 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [fip1.jpa1.ExoJPATest]: using defaults.
20:19:53.304 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
20:19:53.317 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
20:19:53.328 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@420d815f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3bb14155, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@791334c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@36343663, org.springframework.test.context.transaction.TransactionalTestExecutionListener@189d5e83, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@29170f2c, org.springframework.test.context.event.EventPublishingTestExecutionListener@27125211, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3082ffbe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4219d66b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@53e6cf6b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@66d19ddc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4189f1b7]
20:19:53.335 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
20:19:53.353 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@50a1a06b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
20:19:53.405 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.5.RELEASE)

2020-03-30 20:19:53.863  INFO 6840 --- [    Test worker] fip1.jpa1.ExoJPATest                     : Starting ExoJPATest on LAPTOP-Q8IO1BSP with PID 6840 (started by Arthur in C:\Users\Arthur\Desktop\cours\INGE 1\Java avancÃ©\cours05\tp5a)
2020-03-30 20:19:53.865  INFO 6840 --- [    Test worker] fip1.jpa1.ExoJPATest                     : No active profile set, falling back to default profiles: default
2020-03-30 20:19:54.700  INFO 6840 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-03-30 20:19:54.885  INFO 6840 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 167ms. Found 3 JPA repository interfaces.
2020-03-30 20:19:55.860  INFO 6840 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-30 20:19:56.185  INFO 6840 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-30 20:19:56.394  INFO 6840 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-03-30 20:19:56.528  INFO 6840 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.12.Final
2020-03-30 20:19:56.823  INFO 6840 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-03-30 20:19:57.372  INFO 6840 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table auteur if exists
Hibernate: drop table emprunteur if exists
Hibernate: drop table emprunteur_meslivresempruntes if exists
Hibernate: drop table livre if exists
Hibernate: drop table livre_mes_auteurs if exists
Hibernate: create table auteur (id bigint not null, nom varchar(255), prenom varchar(255), primary key (id))
Hibernate: create table emprunteur (id bigint not null, nom varchar(255), prenom varchar(255), primary key (id))
Hibernate: create table emprunteur_meslivresempruntes (emprunteur_id bigint not null, meslivresempruntes_id bigint not null)
Hibernate: create table livre (id bigint not null, date_publication integer not null, titre varchar(255), emprunteur_id bigint, primary key (id))
Hibernate: create table livre_mes_auteurs (livre_id bigint not null, mes_auteurs_id bigint not null)
Hibernate: alter table emprunteur_meslivresempruntes add constraint UK_c45noxtakyyg43e646g9ub0hg unique (meslivresempruntes_id)
Hibernate: alter table emprunteur_meslivresempruntes add constraint FKexnrbp0e5aai67e3o93g4gvxf foreign key (meslivresempruntes_id) references livre
Hibernate: alter table emprunteur_meslivresempruntes add constraint FK275gcx7tk6a02ajf7h74q3gf4 foreign key (emprunteur_id) references emprunteur
Hibernate: alter table livre add constraint FKh58r8lg2dwpqklhieeqfnyw4 foreign key (emprunteur_id) references emprunteur
Hibernate: alter table livre_mes_auteurs add constraint FKm7idcbxw544xdtd8mgtbl8pqa foreign key (mes_auteurs_id) references auteur
Hibernate: alter table livre_mes_auteurs add constraint FK47vhrqsumu5o0vmudputioqfn foreign key (livre_id) references livre
2020-03-30 20:19:58.573  INFO 6840 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-03-30 20:19:58.582  INFO 6840 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-30 20:19:59.298  INFO 6840 --- [    Test worker] fip1.jpa1.ExoJPATest                     : Started ExoJPATest in 5.887 seconds (JVM running for 8.224)
2020-03-30 20:19:59.327  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@50a1a06b, testMethod = testCreerEmprunteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select emprunteur0_.id as id1_1_0_, emprunteur0_.nom as nom2_1_0_, emprunteur0_.prenom as prenom3_1_0_ from emprunteur emprunteur0_ where emprunteur0_.id=?
Hibernate: insert into emprunteur (nom, prenom, id) values (?, ?, ?)
Hibernate: select emprunteur0_.id as id1_1_, emprunteur0_.nom as nom2_1_, emprunteur0_.prenom as prenom3_1_ from emprunteur emprunteur0_
2020-03-30 20:19:59.979  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@50a1a06b, testMethod = testCreerEmprunteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:19:59.997  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@68cf81fd, testMethod = testChercherNomPrenom@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: update auteur set nom=?, prenom=? where id=?
Hibernate: select auteur0_.id as id1_0_, auteur0_.nom as nom2_0_, auteur0_.prenom as prenom3_0_ from auteur auteur0_
2020-03-30 20:20:00.076  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@68cf81fd, testMethod = testChercherNomPrenom@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.113  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@2585f28b, testMethod = testCreerAuteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
2020-03-30 20:20:00.126  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@2585f28b, testMethod = testCreerAuteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.143  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@26913482, testMethod = testDatesIntervalle@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
2020-03-30 20:20:00.236  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@26913482, testMethod = testDatesIntervalle@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.260  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@224fc8d, testMethod = testEmprunter@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select emprunteur0_.id as id1_1_0_, emprunteur0_.nom as nom2_1_0_, emprunteur0_.prenom as prenom3_1_0_ from emprunteur emprunteur0_ where emprunteur0_.id=?
Hibernate: insert into emprunteur (nom, prenom, id) values (?, ?, ?)
Hibernate: select emprunteur0_.id as id1_1_, emprunteur0_.nom as nom2_1_, emprunteur0_.prenom as prenom3_1_ from emprunteur emprunteur0_
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
Hibernate: update livre set date_publication=?, emprunteur_id=?, titre=? where id=?
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
Hibernate: delete from livre where id=?
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
2020-03-30 20:20:00.326  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@224fc8d, testMethod = testEmprunter@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.331  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@634721aa, testMethod = testCreerLivreEtAuteurs@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
2020-03-30 20:20:00.365  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@634721aa, testMethod = testCreerLivreEtAuteurs@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.372  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@34d66c95, testMethod = testCreerAuteurs@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: select auteur0_.id as id1_0_, auteur0_.nom as nom2_0_, auteur0_.prenom as prenom3_0_ from auteur auteur0_
2020-03-30 20:20:00.402  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@34d66c95, testMethod = testCreerAuteurs@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.405  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@39767ed8, testMethod = testDatesPublication@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
2020-03-30 20:20:00.433  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@39767ed8, testMethod = testDatesPublication@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.437  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@59fc7c94, testMethod = testCreerLivre@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
2020-03-30 20:20:00.453  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@59fc7c94, testMethod = testCreerLivre@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.456  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@420a6f2f, testMethod = testTrouverLivresDunAuteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: select livre0_.id as id1_3_0_, livre0_.date_publication as date_pub2_3_0_, livre0_.emprunteur_id as emprunte4_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre (date_publication, emprunteur_id, titre, id) values (?, ?, ?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: insert into livre_mes_auteurs (livre_id, mes_auteurs_id) values (?, ?)
Hibernate: select livre0_.id as id1_3_, livre0_.date_publication as date_pub2_3_, livre0_.emprunteur_id as emprunte4_3_, livre0_.titre as titre3_3_ from livre livre0_
2020-03-30 20:20:00.508  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@420a6f2f, testMethod = testTrouverLivresDunAuteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-03-30 20:20:00.511  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@2e43ac99, testMethod = testPostCreationAuteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2d7098f0]; rollback [true]
Hibernate: select auteur0_.id as id1_0_0_, auteur0_.nom as nom2_0_0_, auteur0_.prenom as prenom3_0_0_ from auteur auteur0_ where auteur0_.id=?
Hibernate: insert into auteur (nom, prenom, id) values (?, ?, ?)
Hibernate: select auteur0_.id as id1_0_, auteur0_.nom as nom2_0_, auteur0_.prenom as prenom3_0_ from auteur auteur0_
2020-03-30 20:20:00.529  INFO 6840 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@75d014c8 testClass = ExoJPATest, testInstance = fip1.jpa1.ExoJPATest@2e43ac99, testMethod = testPostCreationAuteur@ExoJPATest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b10ddc2 testClass = ExoJPATest, locations = '{}', classes = '{class fip1.jpa1.ExoJPATest$ConfigDuTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@15eae9d5, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32a469c4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@62791c9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@69599b91], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
